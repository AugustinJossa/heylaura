<h1>Test</h1>
        <article>
          <h1 id="writer">
            Formless form
          </h1>
          <h2>
            A Conversational Form generated from JSON, see file <a href="profiles/files/formless.json" target="_blank">formless.json</a>
            </br></br>Options and tag attributes are 1:1 with a form tag.
            </br></br>Example here also mimics calls to a server and injecting of server created tags.
            </br>This can be used to validate and create custom flows Server Side.
          </h2>
        </article>
      </section>

      <section role="form">
        <div class="form-outer">
          <h2>No form, it's all JS</h2>
          <form id="empty-form"></form>
        </div>
      </section>

      <section id="cf-context" role="cf-context" cf-context>

      </section>
    </main>



    <!-- Examples specific code below -->
  <% content_for(:js) do %>
    <script>
      // check formless.json
      // var testValidation = function(dto, success, error){
      //   console.log("testValidation setup from formless.json, dto:", dto);
      //   if(dto.text.indexOf("holmes") != -1)
      //     return success();
      //   return error();
      // };

      var conversationalForm;

      // check formless.json
      var onFormlessSubmitted = function(cf){
        var formData = conversationalForm.getFormData();
        var formDataSerialized = conversationalForm.getFormData(true);
        console.log("Formdata:", formData);
        console.log("Formdata, obj:", formDataSerialized);
        conversationalForm.addRobotChatResponse("Check the dev console for FormatData output.")

      }

      var step = 0;

      var onStepCallback = function(dto, success, error){
        // fake load, to illustrate how oe could communicate with a back-end service which could return new tags based on answer.
        var xhr = new XMLHttpRequest()
        xhr.onload = function(event){
          console.log(step);
          console.log(dto);
          if(step++ == 0){
            // add tags that are received from pseudo webservice .. incremente step pour eviter de recharger
            var tags = [
              {
                // select group
                "tag": "select",
                "name": "country",
                "cf-questions": "First tag value: {first-tag}&& + follow-up",
                "cf-input-placeholder": "Some copy",
                "multiple": false,
                "children":[
                  {
                    "tag": "option",
                    "cf-label": "USA",
                    "value": "usa"
                  },
                  {
                    "tag": "option",
                    "cf-label": "UK",
                    "value": "uk"
                  }
                ]
              },
              {
                // basic tag
                "tag": "input",
                "type": "text",
                "cf-questions": "Tag is injected at runtime, data from 'webservice', check source of <a href='formless.html' style='text-decoration:underline'>formless.html</a>",
                "cf-error": "Inject some text"
              },
              {
                // tag group
                "tag": "fieldset",
                "type": "Checkboxes",
                "cf-input-placeholder": "Tag group is injected",
                "cf-questions": "Choose an injected tag",
                "children":[
                  {
                    "tag": "input",
                    "type": "checkbox",
                    "name": "checkboxes-buttons-1",
                    "cf-label": "checkbox-x1",
                    "checked": "checked"
                  },
                  {
                    "tag": "input",
                    "type": "checkbox",
                    "name": "checkboxes-buttons-1",
                    "cf-label": "checkbox-x2"
                  }
                ]
              }
            ];


            console.log("Tags to parse and add at runtime to formless:", tags)

            // add tag
            // add tag at index
            conversationalForm.addTags(tags, true);
          }

          setTimeout(function(){
            // fake loading...
            success();
          }, 1000);

        }
        xhr.onerror = function(){
          error("Webservice failed??")
        }
        console.log("blabla");
        xhr.open("GET", window.location.href);
        xhr.send();
      }

      // load json file with formless data (files/formless.json)
      window.onload = function(){
        // var xhr = new XMLHttpRequest()
        // xhr.onload = function(event){

          var json = {
  "options": {
    "preventAutoAppend": true,
    "preventAutoFocus": true,
    "submitCallback": "window.onFormlessSubmited"
  },
  "tags": [
    {
      "tag": "input",
      "type": "text",
      "id": "first-tag",
      "value": "Prefilled value here",
      "cf-questions": "Prefilled1&&with follow-up1&&with follow-up11||Prefilled2&&with follow-up2&&with follow-up22"
    },
    {
      "tag": "select",
      "cf-input-placeholder": "Choose one of the above",
      "multiple": "multiple",
      "cf-questions": "Choose multiple of the elements from the list",
      "children":[
        {
          "tag": "option",
          "name": "option-dropdown-1",
          "cf-label": "option-1",
          "value": "-1"
        },
        {
          "tag": "option",
          "name": "option-dropdown-1",
          "cf-label": "option-2",
          "value": "-2"
        }
      ]
    },
    {
      "tag": "fieldset",
      "type": "Radio buttons",
      "cf-input-placeholder": "Choose one of the above",
      "cf-questions": "Choose one of the radioss",
      "children":[
        {
          "tag": "input",
          "type": "radio",
          "name": "radio-buttons-1",
          "cf-label": "radio-1",
          "checked": "checked"
        },
        {
          "tag": "input",
          "type": "radio",
          "name": "radio-buttons-1",
          "cf-label": "radio-2"
        }
      ]
    },
    {
      "tag": "fieldset",
      "type": "Checkboxes",
      "cf-input-placeholder": "Choose above",
      "cf-questions": "Choose some checkboxes",
      "children":[
        {
          "tag": "input",
          "type": "checkbox",
          "name": "checkboxes-buttons-1",
          "cf-label": "checkbox-1",
          "checked": "checked"
        },
        {
          "tag": "input",
          "type": "checkbox",
          "name": "checkboxes-buttons-1",
          "cf-label": "checkbox-2"
        }
      ]
    },
    {
      "tag": "input",
      "type": "password",
      "cf-input-placeholder": "Password field",
      "cf-questions": "Write a password"
    },
    {
      "tag": "input",
      "type": "text",
      "pattern": ".{5,10}",
      "cf-input-placeholder": "Input w. pattern attribute",
      "cf-error": "No less than 5 and no more than 10 characters",
      "cf-questions": "Keep between 5-10 characters"
    },
    {
      "tag": "input",
      "type": "text",
      "required": "required",
      "cf-questions": "This field is required (attribute)",
      "cf-error": "Please write something"
    },
    {
      "tag": "input",
      "type": "text",
      "required": "required",
      "cf-questions": "This field uses window.testValidation",
      "cf-validation": "window.testValidation",
      "cf-error": "Check the window.testValidation method"
    }
  ]
};

          console.log("JSON to parse as form:", json)

          // start one w. string
          // window.cf.ConversationalForm.startTheConversation(str);

          // add callback hooks.. DANS LE JSON
          json.options.submitCallback = onFormlessSubmitted.bind(window);
          json.options.flowStepCallback = onStepCallback.bind(window);
          // start one w. json
          conversationalForm = window.cf.ConversationalForm.startTheConversation(json);
          document.getElementById("cf-context").appendChild(conversationalForm.el);

          // in-document form
          // window.cf.ConversationalForm.startTheConversation({
          //  formEl: document.getElementById("empty-form")
          // });
        // }
        // xhr.open("GET", "file:///Users/vs/code/vincentsta/augustinjossa/heylaura/app/views/profiles/files/formless.json" );
        // xhr.send();
      };
    </script>
  <%end%>
